{"version":3,"sources":["components/main/main.js","components/Layout/sidebar.js","components/Layout/Layout.js","utils/api.js","components/home/children_info.js","components/home/children.js","components/home/home.js","components/updater/updater.js","components/product/register/dragndrop.js","components/product/register/registerform.js","components/product/register.js","utils/product.js","components/commoninfo/formbox.js","components/commoninfo/commonform.js","components/commoninfo/children.js","components/commoninfo/commoninfo.js","components/Routes.js","components/App.js","serviceWorker.js","index.js"],"names":["ipcRenderer","window","Main","props","state","redirectUrl","username","localStorage","getItem","password","loading","handleSubmit","bind","handleChange","on","event","data","this","setState","send","type","buttons","title","message","detail","preventDefault","setItem","reqdata","console","log","target","name","value","to","Container","className","Grid","columns","verticalAlign","centered","Row","Column","Segment","Dimmer","active","Loader","size","Form","onSubmit","onChange","Field","placeholder","Button","React","Component","Leftsidebar","Menu","vertical","Item","activeItem","onClick","handleItemClick","Input","icon","Layout","e","currentName","redirect","prevProps","prevState","snapshot","replace","split","minSize","defaultSize","children","Infocard","Card","fluid","Content","header","description","Content_Info","waitPurchase","newPurchase","departtoday","bookedOrder","waitDelivery","onDelivery","finishDelivery","requestCancle","requestReturn","requestExchange","confirmPurchase","calculateToday","calculateExpect","chargedMoney","order_desc","Statistic","Group","widths","Value","Icon","color","Label","delivery_desc","claim_desc","calculate_desc","Home","Updater","updateFinish","logoDataUrl","releaseName","percentage","status","err","parseFloat","Progress","indicating","percent","progress","DragAndDrop","dropRef","createRef","handleDrag","stopPropagation","handleDragIn","dragCounter","dataTransfer","items","length","drag","handleDragOut","handleDrop","files","clearData","dragging","div","current","addEventListener","removeEventListener","ref","Header","RegisterForm","fileList","i","push","style","height","width","map","file","key","index","Product_Register","Product_Structure","common","product_status","product_categoryId","product_asInfo","product_asContact","product_manufacture","product_brandName","product_dateOfManufacture","product_dateOfExpire","poduct_vatType","product_underAge","product_showReview","product_originCode","product_importer","product_multiOrigin","product_originSelfInput","product_deliveryType","product_deliveryFeeType","product_deliveryFeeDefault","product_deliveryPaymentType","product_deliveryConditionFree","product_deliveryIndividualQuantity","product_deliveryReturnFee","product_deliveryExchangeFee","product_deliveryRegionalInfo","product_deliveryInstallFee","product_ownerAdditionalInfo","product_discountImmediateValue","product_discountImmediateUnit","product_discountMultiOrderConditionValue","product_discountMultiOrderConditionUnit","product_discountMultiOrderValue","product_discountMultiOrderUnit","product_rewardOrderPointValue","product_rewardOrderPointUnit","product_rewardTextReviewValue","product_rewardTextReviewUnit","product_rewardMediaReviewValue","product_rewardMediaReviewUnit","product_rewardMonthTextReviewValue","product_rewardMonthMediaReviewValue","product_rewardFriendReviewValue","product_interestFreeMont","product_present","uncommon","product_name","product_price","product_quantity","product_mainImageName","product_additionalImageNames","product_detailInfo","product_ownerCode","product_ownerBarcode","product_optionType","product_optionName","product_optionValue","product_optionPrice","product_optionquantity","product_additioanlProductName","product_additionalProductValue","product_additionalProductPrice","product_additionalProductQuantity","product_informationNoticeName","product_informationNoticeModel","product_informationNoticeCert","product_informationNoticeManufacture","product_jjimOnly","product_culturePriceOption","product_ISBN","product_selfPublished","ProductUtil","getProdutStructure","FormBox","showInfo","toggleInfo","textHandler","selectHandler","sendData","result","handler","as","attached","block","textAlign","Message","content","helpText","info","inputType","Select","selection","placeHolder","options","CommonForm","product_state_options","text","product_state","CommonInfo","NoMatch","Routes","path","exact","component","paht","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.17208777.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  Button,\n  Checkbox,\n  Form,\n  Container,\n  Segment,\n  Dimmer,\n  Loader,\n  Grid\n} from \"semantic-ui-react\";\nimport {\n  Redirect\n} from \"react-router-dom\";\n\nimport \"stylesheets/main.css\";\nconst {\n  ipcRenderer\n} = window;\n\n\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      redirectUrl: '',\n      username : localStorage.getItem(\"username\"),\n      password : localStorage.getItem(\"password\"),\n      loading: false\n    }\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    ipcRenderer.on(\"response_crawler_login\", function (event, data) {\n      this.setState(\n          { loading:false }\n        )\n      if(data === \"NOT_LOGGED_IN\") {\n        const options = {\n          type: \"question\",\n          buttons: [\"확인\"],\n          title: \"에러!\",\n          message: \"로그인중 문제가 발생하였습니다.\",\n          detail: \"아이디 / 비밀번호를 다시 확인해보세요\",\n        };\n        ipcRenderer.send(\"request_show_message_box\", options);\n      }\n      else {\n        this.setState({redirectUrl: '/home'})\n      }\n    }.bind(this));\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.setState(\n      { loading:true }\n    )\n\n    if (this.state.username !== \"\" && this.state.password !== \"\") {\n      localStorage.setItem(\"username\", this.state.username);\n      localStorage.setItem(\"password\", this.state.password);\n    }\n    \n    let reqdata = {username:this.state.username, password:this.state.password}\n    ipcRenderer.send(\"request_crawler_login\", reqdata);\n    console.log(this.state.username, this.state.password);\n  }\n  handleChange(event) {\n    switch (event.target.name) {\n      case \"username\":\n        this.setState({username:event.target.value})\n        break;\n      case \"password\":\n        this.setState({password:event.target.value})\n        break;\n      default:\n        break;\n    }\n  }\n\n  render (){\n    if(this.state.redirectUrl !== \"\"){\n      console.log(\"redirect to \", this.state.redirectUrl)\n      return (<Redirect to={this.state.redirectUrl}/>)\n    }\n      \n    return (\n      <Container className=\"fullWidth\">\n        <Grid columns={2} verticalAlign='middle' centered className=\"centered fullWidth\">\n          <Grid.Row>\n            <Grid.Column>\n              <Segment>\n                {this.state.loading &&\n                <Dimmer active className=\"dimmerColoring\">\n                  <Loader size='massive'>로그인중</Loader>\n                </Dimmer>\n                }\n                <Form onSubmit={this.handleSubmit} onChange={this.handleChange}>\n                  <Form.Field>\n                    <label>스토어팜 아이디</label>\n                    <input name=\"username\" value={this.state.username} placeholder='스토어팜 아이디' />\n                  </Form.Field>\n                  <Form.Field>\n                    <label>스토어팜 비밀번호</label>\n                    <input name=\"password\" value={this.state.password} placeholder='스토어팜 비밀번호' />\n                  </Form.Field>\n                  <Form.Field>\n                  </Form.Field>\n                  <Button type='submit'>Submit</Button>\n                </Form>\n              </Segment>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Container>\n      \n    );\n  }\n}\n\nexport default Main;","import React from 'react'\nimport {\n  Menu,\n  Label,\n  Input\n} from \"semantic-ui-react\";\n\nfunction Leftsidebar(props) {\n  return (\n    <Menu vertical>\n      <Menu.Item\n        name=\"home\"\n        active={props.activeItem === \"home\"}\n        onClick={props.handleItemClick}\n      >\n        HOME\n      </Menu.Item>\n      <Menu.Item\n        name=\"product_list\"\n        active={props.activeItem === \"product_list\"}\n        onClick={props.handleItemClick}\n      >\n        상품목록\n      </Menu.Item>\n\n      <Menu.Item\n        name=\"product_register\"\n        active={props.activeItem === \"product_register\"}\n        onClick={props.handleItemClick}\n      >\n        상품등록\n      </Menu.Item>\n\n      <Menu.Item\n        name=\"commoninfo\"\n        active={props.activeItem === \"commoninfo\"}\n        onClick={props.handleItemClick}\n      >\n        공통정보 등록\n      </Menu.Item>\n\n      <Menu.Item\n        name=\"updates\"\n        active={props.activeItem === \"updates\"}\n        onClick={props.handleItemClick}\n      >\n        잔고현황\n      </Menu.Item>\n      <Menu.Item>\n        <Input icon=\"search\" placeholder=\"Search mail...\" />\n      </Menu.Item>\n    </Menu>\n  );\n}\n\nexport {\n  Leftsidebar\n}","import React from 'react'\nimport {\n  Container, Divider\n} from \"semantic-ui-react\";\nimport \"stylesheets/global.css\"\nimport SplitPane, { Pane } from \"react-split-pane\";\nimport {Leftsidebar} from \"./sidebar.js\";\nimport {\n  Redirect\n} from \"react-router-dom\";\n\n\nclass Layout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeItem: props.currentName,\n      redirect: ''\n    };\n    console.log(\"CURRENT : \", this.state.activeItem)\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if(this.state.activeItem !== prevState.activeItem && this.state.activeItem !== this.props.currentName) {      \n      var redirectUrl = '/' + this.state.activeItem.replace('_','/')\n      console.log(redirectUrl)\n\n      this.setState({\n        redirect: redirectUrl\n      })\n    }\n  }\n\n  handleItemClick = (e, { name }) => {\n    this.setState({ activeItem: name });\n  }\n\n  render() {\n    if(this.state.redirect) return <Redirect to={this.state.redirect} />\n    return (\n      <div>\n        <SplitPane split=\"vertical\" className=\"makeScrollable\" minSize={100} defaultSize={212}>\n          <div className=\"dividerLeft\">\n            <Leftsidebar\n              activeItem={this.state.activeItem}\n              handleItemClick={this.handleItemClick}\n            />\n          </div>\n          <div className=\"dividerRight\">\n            {this.props.children}\n          </div>\n        </SplitPane>\n      </div>\n    )\n  }\n}\n\nexport default Layout;","const {\n  ipcRenderer\n} = window;\n\nconst ApiUtil ={\n  prepareApiData: function (params) {\n    return {\n      apiData: this.getApiData(),\n      apiParams: params\n    }\n  },\n  // ! api 요청시에 데이터 준비용 유틸 함수, params 를 만들어줌\n\n  decodeApiResponse : function (data) {\n    if(!data || data === \"ERROR\") {\n      return null;\n    }\n    else {\n      if(data.status !== \"0000\") {\n        console.error(\"###### found Error in decodeApiResponse ######\")\n        console.error(\"CODE :\" + data.status)\n        return null;\n      }\n      return data.data\n    }\n  },\n  // ! ipcrender / ipcmain 을 통해 보내지는 결과값을 디코딩, 존재하지않거나 에러시 null 반환\n  getDateFromTimeStamp: function (epoch) {\n    var timestamp = parseInt(epoch);\n    var d = new Date(timestamp);\n    return d;\n  },\n  // ! epoch timestamp 를 data 로 만들어줌\n  getFullStringFromTimeStamp: function (epoch) {\n    var d = this.getDateFromTimeStamp(epoch);\n    return `${d.getFullYear()}-${d.getMonth()}-${d.getDay()} ${d.getHours()}:${d.getMinutes()}:${d.getSeconds()}`\n  },\n  // ! epoch timestamp 를 data 로 만든 후 날짜 형식으로 반환\n\n  comma3Seperator: function (price,fixed=3) {\n    let ordinary = parseInt(price);\n    let floats = this.toFixedFloat((parseFloat(price) - ordinary),1);\n    let returnString = ordinary.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n    if(floats > 0) {\n      returnString += `${floats.toString().slice(1)}`\n    }\n    return returnString\n  },\n  // ! 숫자를 3자리씩 잘라서 , 붙여줌\n\n  toFixedFloat: function(price,fixed=3) {\n    return parseFloat(price).toFixed(fixed);\n  }\n}\n\nexport default ApiUtil","import React, {\n  useState,\n  useEffect,\n  useRef\n} from 'react'\nimport {\n  Accordion,\n  Statistic,\n  Container,\n  Card,\n  Divider,\n  Header,\n  Icon,\n  Segment,\n  Dimmer,\n  Loader,\n  Item,\n  Image,\n  Responsive,\n  Grid\n} from \"semantic-ui-react\";\n\nimport ApiUtil from \"utils/api\"\n\nimport \"stylesheets/home.css\"\n\nconst {\n  ipcRenderer\n} = window;\n\n\nclass Infocard extends React.Component {\n  render () {\n    return (\n      <Grid.Column>\n        <Card fluid>\n          <Card.Content header={this.props.header} />\n          <Card.Content description={this.props.description} />\n        </Card>\n      </Grid.Column>\n    )\n  }\n}\n\n\nclass Content_Info extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      waitPurchase: '', // 결제대기\n      newPurchase: '', // 신규주문\n      departtoday: '', // 오늘출발\n      bookedOrder: '', // 예약구매\n\n      waitDelivery: '', // 배송준비\n      onDelivery: '', // 배송중\n      finishDelivery: '', // 배송완료\n      \n      requestCancle: '', // 취소요청\n      requestReturn: '', // 반품요청\n      requestExchange: '', // 교환요청\n\n      confirmPurchase: '', // 구매확정\n      calculateToday: '', // 오늘정산\n      calculateExpect: '', // 정산예정\n      chargedMoney: '' // 충전금\n    }\n  }\n  componentDidMount() {\n    this.setState({\n      loading: true\n    })\n    ipcRenderer.on(\"response_main_info\", function (event, data) {\n      this.setState(data)\n      this.setState({loading: false})\n    }.bind(this))\n  }\n\n  render () {\n    let order_desc = \n      <Statistic.Group widths='four' size=\"mini\">\n        <Statistic size=\"mini\">\n          <Statistic.Value>\n            <Icon color = {\n              this.state.waitPurchase > 0 ? 'blue' : 'black'\n            } name='plane' /> {this.state.waitPurchase}\n          </Statistic.Value>\n          <Statistic.Label>결제대기</Statistic.Label>\n        </Statistic>\n\n        <Statistic size=\"mini\">\n          <Statistic.Value>\n            <Icon color = {\n              this.state.departtoday > 0 ? 'blue' : 'black'\n            } name='shopping cart' /> {this.state.newPurchase}\n          </Statistic.Value>\n          <Statistic.Label>신규주문</Statistic.Label>\n        </Statistic>\n\n        <Statistic size=\"mini\">\n          <Statistic.Value>\n            <Icon color = {\n              this.state.departtoday > 0 ? 'blue' : 'black'\n            } name='rocket' /> {this.state.departtoday}\n          </Statistic.Value>\n          <Statistic.Label>오늘출발</Statistic.Label>\n        </Statistic>\n\n        <Statistic size=\"mini\">\n          <Statistic.Value>\n            <Icon color = {\n              this.state.bookedOrder > 0 ? 'blue' : 'black'\n            } name='bookmark' /> {this.state.bookedOrder}\n          </Statistic.Value>\n          <Statistic.Label>예약구매</Statistic.Label>\n        </Statistic>\n      </Statistic.Group>\n\n    let delivery_desc =\n      <Statistic.Group widths='three' size=\"mini\">\n        <Statistic size=\"mini\">\n          <Statistic.Value>\n            <Icon color = {\n              this.state.waitDelivery > 0 ? 'blue' : 'black'\n            } name='wait' /> {this.state.waitDelivery}\n          </Statistic.Value>\n          <Statistic.Label>배송준비</Statistic.Label>\n        </Statistic>\n\n        <Statistic size=\"mini\">\n          <Statistic.Value>\n            <Icon color = {\n              this.state.onDelivery > 0 ? 'blue' : 'black'\n            } name='spy' /> {this.state.onDelivery}\n          </Statistic.Value>\n          <Statistic.Label>배송중</Statistic.Label>\n        </Statistic>\n\n        <Statistic size=\"mini\">\n          <Statistic.Value>\n            <Icon color = {\n              this.state.finishDelivery > 0 ? 'blue' : 'black'\n            } name='signing' /> {this.state.finishDelivery}\n          </Statistic.Value>\n          <Statistic.Label>배송완료</Statistic.Label>\n        </Statistic>\n      </Statistic.Group>\n    \n    let claim_desc =\n      <Statistic.Group widths='three' size=\"mini\">\n        <Statistic size=\"mini\">\n          <Statistic.Value>\n            <Icon color = {\n              this.state.requestCancle > 0 ? 'blue' : 'black'\n            } name='cancel' /> {this.state.requestCancle}\n          </Statistic.Value>\n          <Statistic.Label>취소요청</Statistic.Label>\n        </Statistic>\n\n        <Statistic size=\"mini\">\n          <Statistic.Value>\n            <Icon color = {\n              this.state.requestReturn > 0 ? 'blue' : 'black'\n            } name='reply' /> {this.state.requestReturn}\n          </Statistic.Value>\n          <Statistic.Label>반품요청</Statistic.Label>\n        </Statistic>\n\n        <Statistic size=\"mini\">\n          <Statistic.Value>\n            <Icon color = {\n              this.state.requestExchange > 0 ? 'blue' : 'black'\n            } name='exchange' /> {this.state.requestExchange}\n          </Statistic.Value>\n          <Statistic.Label>교환요청</Statistic.Label>\n        </Statistic>\n      </Statistic.Group>\n    \n    let calculate_desc = \n      <Statistic.Group widths='four' size=\"mini\">\n        <Statistic size=\"mini\">\n          <Statistic.Value>\n            <Icon color = {\n              this.state.waitPurchase > 0 ? 'blue' : 'black'\n            } name='check' /> {this.state.waitPurchase}\n          </Statistic.Value>\n          <Statistic.Label>구매확정</Statistic.Label>\n        </Statistic>\n\n        <Statistic size=\"mini\">\n          <Statistic.Value>\n            < Icon name = 'calendar check'\n            color = {\n              this.state.newPurchase > 0 ? 'blue' : 'black'\n            }\n            /> {this.state.newPurchase}\n          </Statistic.Value>\n          <Statistic.Label>오늘정산</Statistic.Label>\n        </Statistic>\n\n        <Statistic size=\"mini\">\n          <Statistic.Value>\n            <Icon color = {\n              this.state.departtoday > 0 ? 'blue' : 'black'\n            } name='calendar outline' /> {this.state.departtoday}\n          </Statistic.Value>\n          <Statistic.Label>정산예정</Statistic.Label>\n        </Statistic>\n\n        <Statistic size=\"mini\">\n          <Statistic.Value>\n            <Icon color = {\n              this.state.bookedOrder > 0 ? 'blue' : 'black'\n            } name='money bill alternate' /> {this.state.bookedOrder}\n          </Statistic.Value>\n          <Statistic.Label>충전금</Statistic.Label>\n        </Statistic>\n      </Statistic.Group>\n\n    return (\n      <Container>\n        <Segment>\n          {this.state.loading &&\n          <Dimmer active className=\"dimmerColoring\">\n            <Loader size='massive'>정보 받아오는 중</Loader>\n          </Dimmer>\n          }\n          <Grid columns={2}>\n            <Grid.Row>\n                <Infocard header=\"주문현황\" description={order_desc}/>\n                <Infocard header=\"클레임\" description={claim_desc}/>\n            </Grid.Row>\n            <Grid.Row>\n                <Infocard header=\"배송현황\" description={delivery_desc}/>\n                <Infocard header=\"정산현황\" description={calculate_desc}/>\n            </Grid.Row>\n          </Grid>\n        </Segment>\n      </Container>\n    )\n  }\n\n}\nexport {Content_Info}","import React, {\n  useState,\n  useEffect,\n  useRef\n} from 'react'\nimport {\n  Container,\n} from \"semantic-ui-react\";\n\nimport ApiUtil from \"utils/api\"\n\nimport {Content_Info} from './children_info'\n\nimport \"stylesheets/home.css\"\n\nconst {\n  ipcRenderer\n} = window;\n\nclass Content extends React.Component {\n  componentDidMount() {\n    ipcRenderer.send(\"request_main_info\")\n  }\n  render () {\n    return (\n      <div>\n        <Content_Info />\n      </div>\n    )\n  }\n}\n\nexport {Content}","import React from 'react'\nimport {\n  Container,\n  Divider,\n  Header,\n  Icon,\n  Table\n} from \"semantic-ui-react\";\nimport { Redirect } from \"react-router-dom\";\nimport Layout from 'components/Layout/Layout';\n\nimport { Content } from \"./children\"\n\nconst { ipcRenderer } = window;\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() { \n    return (\n      <Layout currentName=\"home\">\n        <Container>\n          <Content/>\n        </Container>\n      </Layout>\n      )\n  }\n}\n\n\nexport default Home;","import React from 'react';\n\nimport { Grid, Progress } from \"semantic-ui-react\";\n\nconst { ipcRenderer } = window;\n\nclass Updater extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      updateFinish: false,\n      logoDataUrl: '',\n      releaseName: '',\n      percentage: 0,\n      description: ''\n    }\n  }\n\n  componentDidMount() {\n    ipcRenderer.send(\"register_updateWindow\");\n\n    ipcRenderer.on(\"response_svg_to_data_url\", (event, data) => {\n      data.status === \"success\" ? this.setState({ logoDataUrl: data.data }) : console.log(data.err)\n    })\n    \n    ipcRenderer.on(\"updateProgressPercentage\", (event, data) => {\n      this.setState({\n        percentage: data\n      })\n    });\n    ipcRenderer.on(\"updateReleaseVersion\", (event, data) => {\n      this.setState({\n        releaseName: data\n      })\n    })\n    // ipcRenderer.on(\"updateDescription\", (event, data) => {\n    //   this.setState({\n    //     description: data\n    //   })\n    // })\n  }\n\n  render() {\n    // const isScrapping = this.state.scrapMode;\n    return (\n      <Grid>\n        {/* <h1>{this.state.percentage}</h1> */}\n        <Grid.Row>\n          <Grid.Column>\n            <h3>{parseFloat(this.state.percentage) === 100 ? \"업데이트 완료! 확인 버튼을 눌러 창을 닫아주세요\" : \"업데이트 중...\"}</h3>\n            <Progress indicating percent={parseFloat(this.state.percentage)} progress />\n            <div className=\"col-2 mx-0 px-0 float-right mt-3\">\n            </div>\n          </Grid.Column>\n        </Grid.Row>ㅇ\n      </Grid>\n    );\n  };\n}\n\nexport default Updater;","import React, { Component } from 'react'\nimport {\n  Button,\n  Header,\n  Icon,\n  Segment\n} from 'semantic-ui-react'\n\n\nclass DragAndDrop extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      drag: false,\n      dragging: true\n    }\n  }\n  \n  dropRef = React.createRef()\n  handleDrag = (e) => {\n    e.preventDefault()\n    e.stopPropagation()\n  }\n  handleDragIn = (e) => {\n    e.preventDefault()\n    e.stopPropagation()\n    this.dragCounter++\n    if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n      this.setState({drag: true})\n    }\n  }\n  handleDragOut = (e) => {\n    e.preventDefault()\n    e.stopPropagation()\n    this.dragCounter--\n    if (this.dragCounter === 0) {\n      this.setState({drag: false})\n    }\n  }\n  handleDrop = (e) => {\n    e.preventDefault()\n    e.stopPropagation()\n    this.setState({drag: false})\n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n      this.props.handleDrop(e.dataTransfer.files)\n      e.dataTransfer.clearData()\n      this.dragCounter = 0    \n    }\n  }\n  componentDidMount() {\n    let div = this.dropRef.current\n    div.addEventListener('dragenter', this.handleDragIn)\n    div.addEventListener('dragleave', this.handleDragOut)\n    div.addEventListener('dragover', this.handleDrag)\n    div.addEventListener('drop', this.handleDrop)\n  }\n  componentWillUnmount() {\n    let div = this.dropRef.current\n    div.removeEventListener('dragenter', this.handleDragIn)\n    div.removeEventListener('dragleave', this.handleDragOut)\n    div.removeEventListener('dragover', this.handleDrag)\n    div.removeEventListener('drop', this.handleDrop)\n  }\n  render() {\n    return (\n      <div ref={this.dropRef}>\n        <Segment placeholder>\n          <Header icon>\n            <Icon name='file image outline' />\n            이미지를 여기로 드래그 해주세요\n          </Header>\n          \n        </Segment>\n      </div>\n    )\n  }\n}\nexport {DragAndDrop}","import React from 'react'\nimport {\n  Container,\n  Divider,\n  Form,\n  Icon,\n  Input,\n  Segment\n} from \"semantic-ui-react\";\nimport {\n  Redirect\n} from \"react-router-dom\";\nimport Layout from 'components/Layout/Layout';\n\nimport {\n  DragAndDrop\n} from './dragndrop'\n\n\nconst {\n  ipcRenderer\n} = window;\n\n\nclass RegisterForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      files: []\n    }\n  }\n  handleDrop = (files) => {\n    let fileList = this.state.files\n    for (var i = 0; i < files.length; i++) {\n      if (!files[i].name) return\n      fileList.push(files[i].name)\n    }\n    this.setState({files: fileList})\n  }\n\n  render(){\n    return(\n      <Container>\n        <Form>\n          <Segment.Group>\n            <Segment>상품 등록</Segment>\n\n            <Segment.Group>\n              <Segment>\n                <Form.Field>\n                  <label>상품명</label>\n                  <input placeholder='First Name' />\n                </Form.Field>\n              </Segment>\n            </Segment.Group>\n\n            <Segment.Group>\n              <Segment>대표 이미지</Segment>\n\n              <Segment>\n                <DragAndDrop handleDrop={this.handleDrop}>\n                  <div style={{height: 300, width: 250}}>\n                    {this.state.files.map((file) =>\n                      <div key={file.index}>{file}</div>\n                    )}\n                  </div>\n                </DragAndDrop>\n              </Segment>\n            </Segment.Group>\n\n            <Segment.Group>\n              <Segment>삳세 이미지</Segment>\n\n              <Segment>\n                <DragAndDrop handleDrop={this.handleDrop}>\n                  <div style={{height: 300, width: 250}}>\n                    {this.state.files.map((file) =>\n                      <div key={file.index}>{file}</div>\n                    )}\n                  </div>\n                </DragAndDrop>\n              </Segment>\n            </Segment.Group>\n            \n\n            <Segment.Group>\n              <Segment>상세설명 이미지</Segment>\n\n              <Segment>\n                <DragAndDrop handleDrop={this.handleDrop}>\n                  <div style={{height: 300, width: 250}}>\n                    {this.state.files.map((file) =>\n                      <div key={file.index}>{file}</div>\n                    )}\n                  </div>\n                </DragAndDrop>\n              </Segment>\n            </Segment.Group>\n            \n          </Segment.Group>\n        </Form>\n      </Container>\n    )\n  }\n}\n\nexport {RegisterForm};","import React from 'react'\nimport {\n  Container,\n  Divider,\n  Header,\n  Icon,\n  Table\n} from \"semantic-ui-react\";\nimport {\n  Redirect\n} from \"react-router-dom\";\nimport Layout from 'components/Layout/Layout';\n\nimport {\n  RegisterForm\n} from \"./register/registerform\"\n\nconst {\n  ipcRenderer\n} = window;\n\nclass Product_Register extends React.Component {\n  \n  render() {\n    return (\n      <Layout currentName=\"product_register\">\n        <Container>\n          <RegisterForm/>\n        </Container>\n      </Layout>\n    )\n  }\n}\n\nexport default Product_Register","const {\n  ipcRenderer\n} = window;\n\n// ! `! 으로 된 내용 : 필수 ? 로 된 내용 : 비필수, <상품설명 : 입력값 예시> 형식`\n// ! common : 공통사항 / uncommon : 상품별 정의사항\n\nconst Product_Structure = {\n  common: {\n    product_status: '', // ! 상품상태 : 신상품 / 중고상품\n    product_categoryId: '', // ! 카테고리 코드 : 50000807\n    product_asInfo: '', // ! A/S 안내내용 : 토요일 10:00~14:00 까지 응대 가능하며 일요일은 휴무입니다 (HTML은 입력할 수 없음)\n    product_asContact: '', // ! A/S 전화번호 : 010-0000-0000 ( 숫자와 \"-\" 만 입력 가능 / 20자 이내)\n    product_manufacture: '', // ? 제조사 : 동광인터내셔날 ( 제조사명 )\n    product_brandName: '', // ? 브랜드명 : SOUP\n    product_dateOfManufacture: '', // ? 제조일자 : 2016-8-1 ( yyyy-MM-dd 형식으로 입력)\n    product_dateOfExpire: '', // ? 유효일자 : 2017-8-1 ( yyyy-MM-dd 형식으로 입력)\n    poduct_vatType: '', // ! 부가세 : 과세상품,면세상품,영세상품 ( 보기 중 선택 )\n    product_underAge: '', // ! 미성년자 구매 : Y, N (y: 미성년자 구매 가능 , n : 미성년자 구매 불가능)\n    product_showReview: '', // ! 구매평 노출 여부 : Y , N ( y : 노출 , n : 노출 안함)\n    product_originCode: '', // ! 원산지 코드 : 원산지 찾기 팝업에서 검색한 원산지 코드를 입력\n    product_importer: '', // ! ? (조건부 필수) 수입사 : 동광 ( 원산지를 수입산으로 선택한 경우 필수 입력)\n    product_multiOrigin: '', // ! 복수 원산지 여부 : Y : 원산지가 다른 상품을 등록시, 원산지 같은 상품 ( Y 인 경우 상세정보에 상품별 원산지 입력해야함)\n    product_originSelfInput: '', // ! ? (조건부 필수 ) 원산지 직접 입력 : 원산지입력 ( 원산지 직접 입ㄹ력인 경우 필수 입력 )\n    product_deliveryType: '', // ! ? (조건부 필수 : 배송 상품인 경우 필수 입력) 배송방법 : 배송상품인 경우 택배/소포/등기/직접배송(화물배달) 항목 중 선택 ( 입력 하지 않으면 배송없음 상품으로 등록됨)\n    product_deliveryFeeType: '', // ! ? (조건부 필수 : 배송 상품인 경우 입력) 배송비 유형 : 무료,조건부무료,유료,수량별부과 항목 중 선택 입력\n    product_deliveryFeeDefault: '', // ! ? (조건부 필수 :  배송비 유형이 조건부무료 / 유료 / 수량별 부과인 경우) 기본배송비 : 2500 ( 10원 단위로 입력 )\n    product_deliveryPaymentType: '', // ! ? (조건부 필수 : 기본 배송비가 있는 경우) 배송비 결제 방식 : 착불,선결제,착불 또는 선결제 중 선택\n    product_deliveryConditionFree: '', // ! ? (조건부 필수 : 배송비 유형이 조건부 무료인 경우) 조건부무료 상품판매가합계 : 30000 ( 무료 배송가능한 상품 판매가 합계 입력)\n    product_deliveryIndividualQuantity: '', // ! ? (조건부 필수 : 배송비 유형이 수량별 부과 인 경우) 수량별부과 수량 : 반복부과될 상품 개수를 입력 ( 2개마다 배송비 부과일경우 2 )\n    product_deliveryReturnFee: '', // ! ? (조건부 필수 : 배송 상품인 경우)  반품배송비 : 10원 단위 입력\n    product_deliveryExchangeFee: '', // ! ? (조건부 필수 : 배송 상품인 경우) 교환배송비 : 10원 단위 입력\n    product_deliveryRegionalInfo: '', // ? 지역별 차등 배송비 정보 : 영종동의 경우 톨게이트 비용 1만원 추가됩니다 ( 제주/도서산간을 제외한 지역별 차등배송비가 있을 경우, 50자까지)\n    product_deliveryInstallFee: '', // ? 별도 설치비 : Y, N 미입력시 N 으로 등록됨 (Y : 별도설치비 있음 / N : 별도설리비 없음음\n    product_ownerAdditionalInfo: '', // ? 판매자 특이사항 : 청약철회/배송기간 및 방법 / 교환 반품 보증 및 추가비용 / 판매일시/판매지역/판매수량/인도지역 등과 관련되어 특이사항시 입력\n    product_discountImmediateValue: '', // ? 즉시 할인 값 : 구매시 즉시 할인되어 구매할 수 있는 할인금액 설정 (정액 : 최소 10원 ~ 최대 판매가 미만 / 정율 : 1%~99% !5 단위로)\n    product_discountImmediateUnit: '', // ! ? (조건부 필수 : 즉시 할인 설정시) 즉시 할인 단위 : 원 / % 중 입력 (즉시 할인)\n    product_discountMultiOrderConditionValue: '', // ? 복수구매 할인 조건 값 : 3 ( 복수구매 할인을 적용할 주문금액이나 주문 수량)\n    product_discountMultiOrderConditionUnit: '', // ! ? (조건부 필수 : 복수구매 할인 조건 적용시) 복수구매 할인 조건 단위 : 원,개 중 설정\n    product_discountMultiOrderValue: '', // ! ? (조필 : 복수구매 할인 조건 적용시) 복수구매 할인 값 (정액 : 10~초대 판매가 미만 / 정율 : 1~99%)\n    product_discountMultiOrderUnit: '', // ! ? (조필 : 복수구매 할인 조건 적용시) 복수구매 할인 단위 : 원,%\n    product_rewardOrderPointValue: '', // ? 상품 구매시 포인트 지급 값 : 정액 / 정률\n    product_rewardOrderPointUnit: '', // ! ? 상품 구매시 포인트 지급 단위 : %,원\n    product_rewardTextReviewValue: '', // ? 텍스트리뷰 작성시 지급 포인트 : 정액 / 정률\n    product_rewardTextReviewUnit: '', // ! ? 텍스트리뷰 작성시 지급 포인트 단위 : %,원\n    product_rewardMediaReviewValue: '', // ? 포토/동영상 리뷰 작성시 지급 포인트 : 정액 / 정률\n    product_rewardMediaReviewUnit: '', // ! ? 포토/동영상 리뷰 작성시 지급 포인트 단위 :  %,원\n    product_rewardMonthTextReviewValue: '', // ? 한달사용 텍스트 리뷰 작성시 지급 포인트 ( 정액 )\n    product_rewardMonthMediaReviewValue: '', // ? 한달사용 포토/동영상 리뷰 작성시 지급 포인트 ( 정액 )\n    product_rewardFriendReviewValue: '', // ? 톡톡친구/스토어짐 고객 리뷰 작성시 지급 포인트 ( 정액 )\n    product_interestFreeMont: '', // ? 무이자 할부 제공시 : 3,6,9,12 로 입력\n    product_present: '' // ? 사은품 : 제공할 사은품이 있으면 입력\n  },\n  uncommon: {\n    product_name: '', // ! 상품명 : 호리호리 베이지(100자까지 입력 가능)\n    product_price: 0, // ! 판매가격 : 10000 (10원 단위로 입력)\n    product_quantity: 0, // ! 재고수량 : 10 (1개 이상 입력 / 옵션 재고 사용시 옵션 재고수량으로 대치)\n    product_mainImageName: '', // ! 대표 이미지 파일명 : 1.jpg (권장크기 : 640x640 jpg,jpeg,gif,png,bmp 형식의 정지 이미지만 80자 이내)\n    product_additionalImageNames: '', // ! 추가 이미지 파일명들: 추가1.jpg,추가2.jpg (권장크기 동일, 추가이미지는 9개까지 등록 가능 ',' 를 이용해 구분)\n    product_detailInfo: '', // ! 상품 상세정보 : <img src=\"~~~\"/> ( 외부 호스팅에 올린 이미지 url 사용하여 표시 하는것 가능, 링크는 사용 제한됨 )\n    product_ownerCode: '', // ? 판매자 상품코드 : 111111 ( 30자 이내로 입력 )\n    product_ownerBarcode: '', // ? 판매자 바코드 : 222222 ( 30 자 이내로 입력 )\n    product_optionType: '', // ? 옵션 형태 : 단독형/조합형/입력형 중 선택\n    product_optionName: '', // ! ? (조필 : 옵션형태 선택시 ) 옵션 이름 : 옵션명1\\n옵션명2\\n옵션명3 [컬러\\n사이즈] ( 줄바꿈으로 구분, 최대 20자까지, 3개까지)\n    product_optionValue: '', // ! ? (조필 : 단독형/조합형 ) 옵션 값 : 옵션명별로 입력, ',' 로 구분 / 엔터로 또 구분 [빨강,노랑,파랑\\nS,M,L]\n    product_optionPrice: '', // ! ? (조필 : 조합형) 옵션 가격 : 0,100,100\\n0,0,0\\n1000,100,200 (옵션가가 0인 옵션이 있어야함, 판매가 기준으로 나뉨)\n    product_optionquantity: '', // ! ? (조필 : 조합형) 옵션 재고수량 : 첫번째 옵션에 대해서 입력해주어야함 1,10,20\n    product_additioanlProductName: '', // ? 추가 상품명 : 추가상품을 사용할 경우 추가상품명 입력 ( 최대 10개 )\n    product_additionalProductValue: '', // ? 추가 상품값 : 추가 상품명을 입력한 경우 추가상품값 입력\n    product_additionalProductPrice: '', // ? 추가 상품 가격 : 추가 상품명을 입력한 경우 추가상품가 입력\n    product_additionalProductQuantity: '', // ? 추가 상품 재고 수량 : 추가 상품명 입력한 경우 재고수량 입력\n    product_informationNoticeName: '', // ? 상품정보 제공고시 품명\n    product_informationNoticeModel: '', // ? 상품정보 제공고시 모델명\n    product_informationNoticeCert: '', // ? 상품정보 제공고시 인증허가사항 ( 200자까지 입력)\n    product_informationNoticeManufacture: '', // ? 상품정보 제공고시 제조자 ( 200자까지 입력)\n    product_jjimOnly: '', // ? 스토어찜 회원 전용 여부 : Y : 스마트스토어 스토어찜 회원만 구매 가능 N : 전체 구매 가능\n    product_culturePriceOption: '', // ? 문화비 소득 공제 : 중고도서,유아동전집,여행/문화/공연/티켓 카테고리 선택시 입력 Y : 소득공제 가능 N : 불가\n    product_ISBN: '', // ! ? (조필 : 중고/유아동전집 카토기리 선택시 ) ISBN : ISBN 13자리\n    product_selfPublished: '' // ! ? 중고도서,유아동전집 카테고리 선택시 입력 독립출판인 경우 ISBN 입력 안해도됨 Y : 독립출판, N : 일반출판물\n  }\n}\nconst ProductUtil = {\n  getProdutStructure: function () {\n    return Product_Structure;\n  }\n}\nexport default ProductUtil;","import React, {\n  useState,\n  useEffect,\n  useRef\n} from 'react'\nimport {\n  Container,\n  Header,\n  Segment,\n  Message,\n  Button,\n  Grid,\n  Icon,\n  Form,\n  Select\n} from \"semantic-ui-react\";\n\nimport ApiUtil from \"utils/api\"\n\n\n\n\nclass FormBox extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showInfo: false,\n      value: props.value\n    }\n    this.toggleInfo = this.toggleInfo.bind(this);\n    this.textHandler = this.textHandler.bind(this);\n    this.selectHandler = this.selectHandler.bind(this)\n    this.sendData = this.sendData.bind(this);\n  }\n\n  toggleInfo(e) {\n    this.setState({\n      showInfo: !this.state.showInfo\n    })\n\n    this.setState()\n  }\n\n  textHandler(e) {\n    console.log(e.target)\n  }\n\n  selectHandler(e, result) {\n    console.log(result.name, result.value)\n    this.setState(\n      { value: result.value }\n    )\n  }\n\n  sendData(e) {\n    this.props.handler(this.props.name, this.state.value)\n  }\n\n  render() {\n    return(\n      <div>\n        <Header as='h4' attached block>\n          <Grid>\n            <Grid.Row>\n              <Grid.Column width={1} />\n              <Grid.Column width={14}>\n                <Container textAlign='center'>{this.props.title}</Container>\n              </Grid.Column>\n              <Grid.Column width={1}>\n                <Icon onClick={this.toggleInfo} name='help circle'/>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Header>\n        { this.state.showInfo &&\n          <Message attached content={this.props.helpText} icon='help circle' info />\n        }\n        <Segment attached>\n          {this.props.inputType == \"text\" && \n          <Form>\n            <Form.Field>\n              <input name={this.props.name} value={this.state.value}  onChange={this.props.textHandler} />\n            </Form.Field>\n          </Form>\n          }\n          {this.props.inputType == \"select\" &&\n            < Select name = {\n              this.props.name\n            }\n            selection fluid value={this.state.value}\n            placeholder = {\n              this.props.placeHolder\n            }\n            options = {\n              this.props.options\n            }\n            onChange = {\n              this.selectHandler\n            }\n            />\n          }\n          <Button className=\"gab\" size='huge' color='black' onClick={this.sendData}>설정 변경</Button>\n        </Segment>\n      </div>\n    )\n  }\n}\n\nexport {FormBox}","import React, {\n  useState,\n  useEffect,\n  useRef\n} from 'react'\nimport {\n  Container,\n  Header,\n  Segment,\n  Message,\n  Button,\n  Grid,\n  Icon\n} from \"semantic-ui-react\";\n\nimport ProductUtil from \"utils/product\"\n\nimport \"stylesheets/home.css\"\n\nimport {FormBox} from \"./formbox\"\n\nclass CommonForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = ProductUtil.getProdutStructure().common;\n    this.handler = this.handler.bind(this)\n  }\n\n  handler(target,value) {\n    console.log(target,value)\n  }\n\n  render() {\n    let product_state_options = [\n      {key: '신상품', name: 'product_status', value:'신상품', text: '신상품'},\n      {key: '중고상품', name: 'product_status', value:'중고상품', text: '중고상품'}\n    ]\n    return (\n      <Container>\n        < FormBox name = 'product_status'\n        title = \"상품상태\"\n        helpText = \"신상품/중고상품 으로 입력 하시면 됩니다.\"\n        handler={this.handler}\n        inputType = \"select\"\n        placeHolder = \"상품 상태를 골라주세요.\"\n        options={product_state_options}\n        value={this.state.product_state}\n        />\n        < FormBox name = 'product_categoryId'\n        title = \"카테고리\"\n        helpText = \"카테고리 코드를 입력해주세요\"\n        handler={this.handler}\n        inputType = \"select\"\n        placeHolder = \"상품 상태를 골라주세요.\"\n        options={product_state_options}\n        value={this.state.product_state}\n        />\n      </Container>\n    )\n  }\n}\n\nexport {\n  CommonForm\n}","import React, {\n  useState,\n  useEffect,\n  useRef\n} from 'react'\nimport {\n  Container,\n} from \"semantic-ui-react\";\n\nimport ApiUtil from \"utils/api\"\n\n// import {Content_Info} from './children_info'\n\nimport {CommonForm} from './commonform'\n\nimport \"stylesheets/home.css\"\n\nconst {\n  ipcRenderer\n} = window;\n\nclass Content extends React.Component {\n  componentDidMount() {\n    ipcRenderer.send(\"request_main_info\")\n  }\n  render () {\n    return (\n      <div>\n        <CommonForm />\n      </div>\n    )\n  }\n}\n\nexport {Content}","import React from 'react'\nimport {\n  Container,\n  Divider,\n  Header,\n  Icon,\n  Table\n} from \"semantic-ui-react\";\nimport { Redirect } from \"react-router-dom\";\nimport Layout from 'components/Layout/Layout';\n\nimport { Content } from \"./children\"\n\nconst { ipcRenderer } = window;\n\nclass CommonInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() { \n    return (\n      <Layout currentName=\"commoninfo\">\n        <Container>\n          <Content/>\n        </Container>\n      </Layout>\n      )\n  }\n}\n\n\nexport default CommonInfo;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\n// BrowserRouter 사용시에 패키징 후 빈화면만 나오는 이슈 확인하여 변경함\nimport Main from \"components/main/main\";\nimport Home from \"components/home/home\";\nimport Updater from \"components/updater/updater.js\";\nimport Product_Register from \"components/product/register.js\"\nimport CommonInfo from \"components/commoninfo/commoninfo.js\"\n\nfunction NoMatch () {\n  return (\n    <div>\n    MOMATCH\n    </div>\n  )\n}\nclass Routes extends React.Component {\n  componentDidUpdate () {\n    console.log(\"UPDATE!!\")\n  }\n  render () {\n    return (\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={Main} />\n          <Route path=\"/home\" component={Home} />\n          <Route path=\"/commoninfo\" component={CommonInfo} />\n\n          <Route paht=\"/product/register\" component={Product_Register} />\n          <Route path=\"/update\" component={Updater}/>\n\n          <Route component={NoMatch} />\n          \n        </Switch>\n      </Router>\n    )\n  }\n}\n\nexport default Routes;","import React from 'react';\nimport 'stylesheets/App.css';\nimport Routes from \"./Routes\"\nimport 'semantic-ui-css/semantic.min.css'\n\nconst {\n  ipcRenderer\n} = window;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    ipcRenderer.send(\"request_crawler_register\");\n  }\n  render() {\n    // 로그인 여부 확인 후 Home / Login 페이지로 넘겨주기\n    return (\n      <div className=\"App\">\n        <Routes />\n      </div>\n    );\n    \n  }\n\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'stylesheets/global.css';\nimport App from 'components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}